#!/usr/bin/env python3
"""Rips all samples contained by a specified MOD music file to WAV."""

import argparse
from pathlib import Path
import sys
import wave
from formats.mod import ProtrackerMOD

def get_mod_type(file) -> str:
    """Determines the format of the module file provided."""
    if file.read(4) == b"IMPM":
        return "IT"
    file.seek(28)
    if file.read(2) == b"\x1A\x10":
        return "S3M"
    return "MOD"

def main():
    """Parses, opens and extracts samples from a MOD file."""
    parser = argparse.ArgumentParser()
    parser.add_argument("mod_file", type=Path)
    args = parser.parse_args()
    with open(args.mod_file, "rb") as file:
        print(args.mod_file)
        mod_type = get_mod_type(file)
        if mod_type == "MOD":
            mod_data = ProtrackerMOD(file)
        else:
            print("%s files are not supported yet." % mod_type)
            sys.exit(1)
        for i, sample in enumerate(mod_data.samples):
            sample_file_name = ""
            if sample["length"] > 0:
                sample_file_name = str(i)
                if sample["name"] != "":
                    sample_file_name += " - " + sample["name"]
                keepcharacters = (" ", ".", "_", "-")
                sample_file_name = "".join(c for c in sample_file_name if
                                           c.isalnum() or c in
                                           keepcharacters).rstrip()
                print("[Exporting Sample] " + sample_file_name)
                out = wave.open(sample_file_name + ".wav", "wb")
                out.setnchannels(1)
                out.setsampwidth(2)
                # Amiga Paula clock rate closest to C at 8372Hz
                out.setframerate(8363)
                out.writeframes(sample["data"])
                out.close()


if __name__ == "__main__":
    main()
